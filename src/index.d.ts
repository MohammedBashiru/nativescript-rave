/**
 * RAVE NATIVESCRIPT PLUGIN BY MOHAMMED BASHIRU
 * github.com/MohammedBashiru
 */

export class RaveNativeScript {
  /**
  * Present the Flutterwave payment UI.
  */
  checkoutPayment(): Promise<Object>;
}

interface PayLoad {
  /**
   * This is the amount to be charged from card/account
   */
  amount: any

  /**
   * This is the route country for the transaction with respect to the currency.
   */
  country: any

  /**
   * This is the route country for the transaction with respect to the currency. 
   */
  currency: string

  /**
   * This is the specified currency to charge the card in
   */
  fName: string

  /**
   * This is the first name of the card holder or the customer
   */
  lName: string

  /**
   * This is the email address of the customer
   */
  email: string

  /**
   * This is a custom description added by the merchant. 
   * For Bank Transfer payments, this becomes the account name of the account to be paid into.
   */
  narration?: string

  /**
   * Merchant's public key. Get your merchant keys here for staging and live
   */
  publicKey: string


  /**
   * Merchant's encryption key. Get your merchant keys here for staging and live
   */
  encryptionKey: string


  /**
   * This is the unique reference, unique to the particular transaction being carried out. 
   * It is generated by the merchant for every transaction
   */
  txRef: string

  /**
  * Set to true if you want to accept payments via bank accounts, else set to false.
  */
  acceptAccountPayments?: boolean

  /**
   * Set to true if you want to accept payments via cards, else set to false
   */
  acceptCardPayments?: boolean

  /**
   * Set to true if you want to accept Mpesa payments, else set to false . 
   * For this option to work, you should set your country to KE and your currency to KES
   */
  acceptMpesaPayments?: boolean

  /**
   * Set to true if you want to accept Ghana mobile money payments, else set to false . 
   * For this option to work, you should set your country to GH and your currency to GHS
   */
  acceptGHMobileMoneyPayments?: boolean

  /**
   * Set to true if you want to accept Uganda mobile money payments, else set to false . 
   * For this option to work, you should set your country to UG and your currency to UGX
   */
  acceptUgMobileMoneyPayments?: boolean

  /**
   * Set to true if you want to accept US ACH charges from your customers, else set to false . 
   * For this option to work, you should set your country to US and your currency to USD. 
   * You also have to set acceptAccountPayments(true)
   */
  acceptAchPayments?: boolean

  /**
   * Set to true if you want to accept payments via bank transfer from your customers, else set to false . 
   * This option is currently only available for Nigerian Naira.
   */
  acceptBankTransferPayments?: boolean

  /**
   * Set to true if you want your transactions to run in the staging environment otherwise set to false. 
   * Defaults to false
   */
  onStagingEnv?: boolean

  /**
   * Pass in any other custom data you wish to pass. It takes in a List of Meta objects
   */
  setMeta?: any

  /**
   * Pass in a List of SubAccount,if you want to split transaction fee with other people. 
   * Subaccounts are your vendors' accounts that you want to settle per transaction. 
   * To initialize a SubAccount class, 
   * do SubAccount(String subAccountId,String transactionSplitRatio) or SubAccount(String subAccountId,String transactionSplitRatio,String transactionChargeType, String transactionCharge) to also charge the subaccount a fee.
   */
  setSubAccounts?: any

  /**
   * Set to true to preauthorise the transaction amount. 
   */
  setIsPreAuth?: boolean

  /**
   * If you want to do recurrent payment, this is the payment plan ID to use for the recurring payment, you can see how to create payment plans here and here. 
   * This is only available for card payments
   */
  setPaymentPlan?: string

  /**
   * Set to false to not display a dialog for confirming total amount(including charge fee) that Rave will charge. 
   * By default this is set to true
   */
  shouldDisplayFee?: boolean

  /**
   * Set to false to not display a staging label when in staging environment. By default this is set to true
   */
  showStagingLabel?: boolean
}

export class Common {}

/**
 * @param {RaveNativeScript} [options] - options for the rave pay request.
 */
export function prepare(payload?: PayLoad): RaveNativeScript;